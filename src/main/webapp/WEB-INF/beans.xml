<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:s="http://www.springframework.org/schema/security" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"	
	xsi:schemaLocation=" http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://cxf.apache.org/jaxws 
	http://cxf.apache.org/schemas/jaxws.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- JPA schema locations http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd Namesapce xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
		Tag <jpa:repositories base-package="org.vectorx.repository" /> -->
		
 	<context:component-scan base-package="org.vectorx"></context:component-scan>

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
		
	<!-- Endpoint for the service -->
	<jaxws:endpoint id="daysoffservice" implementor="org.vectorx.ws.DaysOffServiceImpl"
		address="/daysoffservice" />

	<tx:annotation-driven />

	<!-- Entity Manager Factory -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="jpa-persistence"></property>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
    </bean>
    
    <!-- Define Hibernate JPA Vendor Adapter -->
    <bean id="jpaVendorAdapter"
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform"
            value="org.hibernate.dialect.PostgreSQLDialect" />
    </bean>   

	<!-- datasource configuration 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/postgres" />
		<property name="username" value="postgres" />
		<property name="password" value="admin" />
	</bean>   
 -->
   <bean id="persistenceExceptionTranslationPostProcessor"
      class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
      
     <!-- Necessary to get the entity manager injected into the factory bean -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />   
 

	<!-- Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<s:http auto-config="true" use-expressions="true">
		<s:intercept-url pattern="/index.xhtml" access="permitAll" />
		<s:intercept-url pattern="/login.xhtml" access="permitAll" />
		<s:intercept-url pattern="/pages/**" access="hasRole('ROLE_USER')" />

		<s:form-login login-page="/login.xhtml"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/login.faces?error=true"
			default-target-url="/pages/welcome.xhtml" always-use-default-target="true" />
		<s:logout logout-success-url="/login.faces"
			invalidate-session="true" />
	</s:http>

	<s:authentication-manager>
		<s:authentication-provider>
			<!-- <jdbc-user-service data-source-ref="dataSource" users-by-username-query="SELECT 
				username, password, enable FROM User WHERE username=?" authorities-by-username-query="SELECT 
				User_username AS username, Auth_authority AS authority FROM User_Auth WHERE 
				User_username=?" /> -->
			<s:user-service>
				<s:user name="ADMIN" password="ADMINPASS" authorities="ROLE_USER" />
			</s:user-service>
		</s:authentication-provider>
	</s:authentication-manager>


</beans>